// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Store {
  id          Int      @id @default(autoincrement())
  name        String
  userId      String
  description String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  product     Product?
}

model Product {
  id          Int        @id @default(autoincrement())
  title       String
  description String?    @db.Text
  price       Int        @default(0)
  stock       Int        @default(0)
  mainImg     String?    @db.Text
  createdAt   DateTime   @default(now())
  updatedAt   DateTime   @updatedAt
  store       Store      @relation(fields: [storeId], references: [id])
  storeId     Int        @unique
  category    Category   @relation(fields: [categoryId], references: [id])
  categoryId  Int
  cart        Cart[]
  wishlist    Wishlist[]
  image       Image[]
}

model Image {
  id        Int      @id @default(autoincrement())
  imgUrl    String   @db.Text
  product   Product  @relation(fields: [productId], references: [id])
  productId Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Cart {
  id        Int      @id @default(autoincrement())
  userId    String
  quantity  Int      @default(1)
  totalPrice Int
  status    String   @default("updaid")
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  product   Product  @relation(fields: [productId], references: [id])
  productId Int
  history   History?
}

model Wishlist {
  id        Int      @id @default(autoincrement())
  userId    String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  product   Product  @relation(fields: [productId], references: [id])
  productId Int
}

model Category {
  id        Int       @id @default(autoincrement())
  name      String
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  product   Product[]
}

model History {
  id          Int      @id @default(autoincrement())
  name        String
  userId      String
  description String
  rating      Int
  updatedBy   String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  cart        Cart     @relation(fields: [cartId], references: [id])
  cartId      Int      @unique
}

model HistoryDetail{
  id Int @id @default(autoincrement())
}
